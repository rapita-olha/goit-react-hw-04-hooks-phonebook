{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","components/Filter/Filter.js","components/ContactsListItem/ContactsListitem.js","components/ContactsForm/ContactsForm.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Label","styled","label","Input","input","Filter","value","onChange","type","name","Button","button","P","p","ContactsListItem","handleClick","currentTarget","props","onClick","this","contact","number","id","Component","Form","form","GreenButton","ContactsForm","state","handleStateChange","setState","handleSubmit","e","preventDefault","onSubmit","reset","pattern","title","required","Ul","ul","Li","li","ContactsList","contacts","sort","contactA","contactB","localeCompare","map","H1","h1","H2","h2","Div","div","App","filter","handleContactAdd","some","alert","prevState","nanoid","getFilteredContacts","normalizedFilterValue","toLowerCase","includes","handleContactDelete","contactId","contactToDelete","find","contactToDeleteIdx","indexOf","splice","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","document","querySelector","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18bbd02b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2NP4x\"};","import s from 'components/Container/Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  margin-bottom: 35px;\n  font-size: 25px;\n  cursor: pointer;\n`;\nconst Input = styled.input`\n  max-width: 200px;\n  height: 10px;\n  margin-left: 30px;\n  padding: 20px 10px;\n  background: #bebebe;\n  color: #036103;\n  border: 2px solid red;\n  border-radius: 10px;\n`;\nfunction Filter({ value, onChange }) {\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </Label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter, Input, Label };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  padding: 5px 10px;\n  width: 100px;\n  margin-top: 10px;\n  background-color: #ff1414;\n  color: black;\n  border-radius: 5px;\n  transition: background-color 200ms linear, color 500ms linear;\n  &:hover,\n  &:focus {\n    background-color: #c9baba;\n    color: red;\n    transition: background-color 200ms linear, color 500ms linear;\n  }\n`;\nconst P = styled.p`\n  font-size: 25px;\n`;\n\nclass ContactsListItem extends Component {\n  static propTypes = {\n    contact: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  handleClick = ({ currentTarget: { name } }) => {\n    this.props.onClick(name);\n  };\n\n  render() {\n    const {\n      contact: { name, number, id },\n    } = this.props;\n    return (\n      <>\n        <P>\n          {name}: {number}\n        </P>\n        <Button name={id} type=\"button\" onClick={this.handleClick}>\n          delete\n        </Button>\n      </>\n    );\n  }\n}\n\nexport { ContactsListItem, Button };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Input, Label } from 'components/Filter';\nimport { Button } from 'components/ContactsListItem';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  margin: 0 auto;\n  margin-bottom: 40px;\n  padding: 20px 70px;\n  border: 2px solid red;\n  border-radius: 10px;\n  background: orange;\n`;\n\nconst GreenButton = styled(Button)`\n  background-color: #278a27;\n  margin: 0 auto;\n  margin-top: 10px;\n  width: 150px;\n  &:hover,\n  &:focus {\n    color: #006900;\n  }\n`;\n\nclass ContactsForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleStateChange = ({ currentTarget: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit({\n      name: this.state.name,\n      number: this.state.number,\n    });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            onChange={this.handleStateChange}\n            value={name}\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            onChange={this.handleStateChange}\n            value={number}\n            required\n          />\n        </Label>\n        <GreenButton type=\"submit\">Add contact</GreenButton>\n      </Form>\n    );\n  }\n}\n\nexport default ContactsForm;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { ContactsListItem } from 'components/ContactsListItem';\n\nconst Ul = styled.ul`\n  color: green;\n  font-weight: 100;\n`;\n\nconst Li = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\nclass ContactsList extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        // name: PropTypes.string.isRequired,\n        // number: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { contacts, onClick } = this.props;\n    return (\n      <Ul>\n        {[...contacts]\n          .sort((contactA, contactB) =>\n            contactA.name.localeCompare(contactB.name),\n          )\n          .map(contact => (\n            <Li key={contact.id}>\n              <ContactsListItem contact={contact} onClick={onClick} />\n            </Li>\n          ))}\n      </Ul>\n    );\n  }\n}\n\nexport default ContactsList;\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport styled from 'styled-components';\n\nimport Container from './components/Container';\nimport ContactsForm from './components/ContactsForm';\nimport ContactsList from './components/ContactsList';\nimport { Filter } from './components/Filter';\n\nconst H1 = styled.h1`\n  margin-bottom: 40px;\n  font-size: 40px;\n  text-align: center;\n`;\n\nconst H2 = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 35px;\n`;\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleStateChange = ({ currentTarget: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleContactAdd = ({ name, number }) => {\n    const isContactExisting = this.state.contacts.some(\n      contact => contact.name === name || contact.number === number,\n    );\n\n    if (!isContactExisting) {\n      this.setState(prevState => {\n        return {\n          contacts: [\n            ...prevState.contacts,\n            {\n              id: nanoid(),\n              name,\n              number,\n            },\n          ],\n        };\n      });\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilterValue = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilterValue),\n    );\n  };\n\n  handleContactDelete = contactId => {\n    this.setState(prevState => {\n      const contactToDelete = prevState.contacts.find(\n        contact => contact.id === contactId,\n      );\n\n      const contactToDeleteIdx = prevState.contacts.indexOf(contactToDelete);\n      prevState.contacts.splice(contactToDeleteIdx, 1);\n\n      return {\n        contacts: [...prevState.contacts],\n        filter: '',\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <H1>Phonebook</H1>\n        <ContactsForm onSubmit={this.handleContactAdd} />\n        <Div>\n          <H2>Contacts</H2>\n          <Filter value={filter} onChange={this.handleStateChange} />\n          {filteredContacts && (\n            <ContactsList\n              contacts={filteredContacts}\n              onClick={this.handleContactDelete}\n            />\n          )}\n        </Div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}